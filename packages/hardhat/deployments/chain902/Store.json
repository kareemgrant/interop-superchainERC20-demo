{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "ItemPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "buyerBalance",
          "type": "uint256"
        }
      ],
      "name": "PurchaseAttempted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTotalTickets",
          "type": "uint256"
        }
      ],
      "name": "TicketPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "name": "TransferResult",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        }
      ],
      "name": "completePurchase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        }
      ],
      "name": "getItemPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "itemId",
          "type": "uint256"
        }
      ],
      "name": "getItemStock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getTicketCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "itemPrices",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "itemStock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ticketsPurchased",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x4f701ee09fc7b65779376be9915ba34bd1ff0ada699c2bf87fac09348d4380ae",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "509086",
    "logsBloom": "0x
    "blockHash": "0x60de68790f79f4482753dccf19a89c8038227003c51190bf8916a2ef7127296f",
    "transactionHash": "0x4f701ee09fc7b65779376be9915ba34bd1ff0ada699c2bf87fac09348d4380ae",
    "logs": [],
    "blockNumber": 59,
    "cumulativeGasUsed": "509086",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x420beeF000000000000000000000000000000001"
  ],
  "numDeployments": 1,
  "solcInputHash": "1b145e3041085fa2fe7eb9b8eab151f4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyerBalance\",\"type\":\"uint256\"}],\"name\":\"PurchaseAttempted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalTickets\",\"type\":\"uint256\"}],\"name\":\"TicketPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"TransferResult\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"completePurchase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"getItemPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"getItemStock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getTicketCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"itemPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"itemStock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ticketsPurchased\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Store.sol\":\"Store\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/Store.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.25;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract Store {\\n    IERC20 public token;\\n    mapping(uint256 => uint256) public itemPrices;\\n    mapping(uint256 => uint256) public itemStock;\\n    mapping(address => uint256) public ticketsPurchased;\\n\\n    event ItemPurchased(address buyer, uint256 itemId, uint256 price);\\n    event PurchaseAttempted(address buyer, uint256 itemId, uint256 price, uint256 buyerBalance);\\n    event TransferResult(bool success);\\n    event TicketPurchased(address buyer, uint256 newTotalTickets);\\n\\n    constructor(address _tokenAddress) {\\n        token = IERC20(_tokenAddress);\\n        itemPrices[1] = 10 * 10**18;\\n        itemStock[1] = 1000;\\n    }\\n\\n    function completePurchase(address buyer, uint256 itemId) external {\\n        uint256 price = itemPrices[itemId];\\n        uint256 buyerBalance = token.balanceOf(buyer);\\n        \\n        emit PurchaseAttempted(buyer, itemId, price, buyerBalance);\\n        require(itemStock[itemId] > 0, \\\"Item out of stock\\\");\\n        require(buyerBalance >= price, \\\"Insufficient balance\\\");\\n        \\n        uint256 allowance = token.allowance(buyer, address(this));\\n        require(allowance >= price, \\\"Insufficient allowance\\\");\\n\\n        bool success = token.transferFrom(buyer, address(this), price);\\n        emit TransferResult(success);\\n        require(success, \\\"Token transfer failed\\\");\\n\\n        itemStock[itemId]--;\\n        ticketsPurchased[buyer]++;\\n\\n        emit ItemPurchased(buyer, itemId, price);\\n        emit TicketPurchased(buyer, ticketsPurchased[buyer]);\\n    }\\n\\n    function getItemPrice(uint256 itemId) external view returns (uint256) {\\n        return itemPrices[itemId];\\n    }\\n\\n    function getItemStock(uint256 itemId) external view returns (uint256) {\\n        return itemStock[itemId];\\n    }\\n\\n    function getTicketCount(address user) external view returns (uint256) {\\n        return ticketsPurchased[user];\\n    }\\n}\\n\",\"keccak256\":\"0x6fc9e9057b2206607206b96faf3b7f3395f79603d36d5fcbf1d198148f057660\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b506040516107e13803806107e1833981016040819052602c9160a9565b600080546001600160a01b0319166001600160a01b039290921691909117815560019052678ac7230489e800007fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f5560026020526103e87fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e05560d7565b60006020828403121560ba57600080fd5b81516001600160a01b038116811460d057600080fd5b9392505050565b6106fb806100e66000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b7efa8eb1161005b578063b7efa8eb14610115578063bf91ad9e14610135578063cff82e2214610155578063fc0c546a1461017e57600080fd5b80633a54fda01461008d5780634c4df870146100c05780636ccda0a6146100e0578063abe95e9f14610100575b600080fd5b6100ad61009b3660046105c3565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b6100ad6100ce3660046105c3565b60009081526001602052604090205490565b6100ad6100ee3660046105f8565b60036020526000908152604090205481565b61011361010e36600461061a565b6101a9565b005b6100ad6101233660046105c3565b60009081526002602052604090205490565b6100ad6101433660046105c3565b60016020526000908152604090205481565b6100ad6101633660046105f8565b6001600160a01b031660009081526003602052604090205490565b600054610191906001600160a01b031681565b6040516001600160a01b0390911681526020016100b7565b60008181526001602052604080822054825491516370a0823160e01b81526001600160a01b03868116600483015291939291909116906370a0823190602401602060405180830381865afa158015610205573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102299190610644565b604080516001600160a01b038716815260208101869052908101849052606081018290529091507fd53c0e9ba160c532eb77072a494511f73424ed073899b98e76e41d7fbb16863d9060800160405180910390a16000838152600260205260409020546102d15760405162461bcd60e51b81526020600482015260116024820152704974656d206f7574206f662073746f636b60781b60448201526064015b60405180910390fd5b818110156103185760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016102c8565b60008054604051636eb1769f60e11b81526001600160a01b0387811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015610369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038d9190610644565b9050828110156103d85760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b60448201526064016102c8565b600080546040516323b872dd60e01b81526001600160a01b03888116600483015230602483015260448201879052909116906323b872dd906064016020604051808303816000875af1158015610432573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610456919061065d565b90507f79d3fc7d275e2b96aa9a87ba7abbc02787aa88e9c495a82ebbe905c77386f4d48160405161048b911515815260200190565b60405180910390a1806104d85760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016102c8565b60008581526002602052604081208054916104f283610695565b90915550506001600160a01b038616600090815260036020526040812080549161051b836106ac565b9091555050604080516001600160a01b0388168152602081018790529081018590527f1452773cf753d0d7c71ed9990f7c7e2bdde4a2d08d187b3647953877e400488d9060600160405180910390a16001600160a01b038616600081815260036020908152604091829020548251938452908301527f0668f5b446eb814fe35b3206f43f14bd8567ba04ddaf7a3ee56516929ab22ccb910160405180910390a1505050505050565b6000602082840312156105d557600080fd5b5035919050565b80356001600160a01b03811681146105f357600080fd5b919050565b60006020828403121561060a57600080fd5b610613826105dc565b9392505050565b6000806040838503121561062d57600080fd5b610636836105dc565b946020939093013593505050565b60006020828403121561065657600080fd5b5051919050565b60006020828403121561066f57600080fd5b8151801515811461061357600080fd5b634e487b7160e01b600052601160045260246000fd5b6000816106a4576106a461067f565b506000190190565b6000600182016106be576106be61067f565b506001019056fea2646970667358221220c980d2b88568f26aacfdd454be09e8437c1c18e52c7cf12da4e62c32f6b2832664736f6c63430008190033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063b7efa8eb1161005b578063b7efa8eb14610115578063bf91ad9e14610135578063cff82e2214610155578063fc0c546a1461017e57600080fd5b80633a54fda01461008d5780634c4df870146100c05780636ccda0a6146100e0578063abe95e9f14610100575b600080fd5b6100ad61009b3660046105c3565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b6100ad6100ce3660046105c3565b60009081526001602052604090205490565b6100ad6100ee3660046105f8565b60036020526000908152604090205481565b61011361010e36600461061a565b6101a9565b005b6100ad6101233660046105c3565b60009081526002602052604090205490565b6100ad6101433660046105c3565b60016020526000908152604090205481565b6100ad6101633660046105f8565b6001600160a01b031660009081526003602052604090205490565b600054610191906001600160a01b031681565b6040516001600160a01b0390911681526020016100b7565b60008181526001602052604080822054825491516370a0823160e01b81526001600160a01b03868116600483015291939291909116906370a0823190602401602060405180830381865afa158015610205573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102299190610644565b604080516001600160a01b038716815260208101869052908101849052606081018290529091507fd53c0e9ba160c532eb77072a494511f73424ed073899b98e76e41d7fbb16863d9060800160405180910390a16000838152600260205260409020546102d15760405162461bcd60e51b81526020600482015260116024820152704974656d206f7574206f662073746f636b60781b60448201526064015b60405180910390fd5b818110156103185760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016102c8565b60008054604051636eb1769f60e11b81526001600160a01b0387811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015610369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038d9190610644565b9050828110156103d85760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b60448201526064016102c8565b600080546040516323b872dd60e01b81526001600160a01b03888116600483015230602483015260448201879052909116906323b872dd906064016020604051808303816000875af1158015610432573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610456919061065d565b90507f79d3fc7d275e2b96aa9a87ba7abbc02787aa88e9c495a82ebbe905c77386f4d48160405161048b911515815260200190565b60405180910390a1806104d85760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016102c8565b60008581526002602052604081208054916104f283610695565b90915550506001600160a01b038616600090815260036020526040812080549161051b836106ac565b9091555050604080516001600160a01b0388168152602081018790529081018590527f1452773cf753d0d7c71ed9990f7c7e2bdde4a2d08d187b3647953877e400488d9060600160405180910390a16001600160a01b038616600081815260036020908152604091829020548251938452908301527f0668f5b446eb814fe35b3206f43f14bd8567ba04ddaf7a3ee56516929ab22ccb910160405180910390a1505050505050565b6000602082840312156105d557600080fd5b5035919050565b80356001600160a01b03811681146105f357600080fd5b919050565b60006020828403121561060a57600080fd5b610613826105dc565b9392505050565b6000806040838503121561062d57600080fd5b610636836105dc565b946020939093013593505050565b60006020828403121561065657600080fd5b5051919050565b60006020828403121561066f57600080fd5b8151801515811461061357600080fd5b634e487b7160e01b600052601160045260246000fd5b6000816106a4576106a461067f565b506000190190565b6000600182016106be576106be61067f565b506001019056fea2646970667358221220c980d2b88568f26aacfdd454be09e8437c1c18e52c7cf12da4e62c32f6b2832664736f6c63430008190033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 84,
        "contract": "contracts/Store.sol:Store",
        "label": "token",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 88,
        "contract": "contracts/Store.sol:Store",
        "label": "itemPrices",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 92,
        "contract": "contracts/Store.sol:Store",
        "label": "itemStock",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 96,
        "contract": "contracts/Store.sol:Store",
        "label": "ticketsPurchased",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)77": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}